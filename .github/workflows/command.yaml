name: slash-command

on:
  issue_comment:
    types: [created]

jobs:
  get-pr-branch-name:
    # PR内のコメント且つ、PRがopen状態且つ、/mergeのコメントで実行
    if: github.event.issue.pull_request && github.event.issue.state == 'open' && startsWith(github.event.comment.body, '/merge')
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.get-pr-branch-name.outputs.branchName }}
    steps:
      - id: get-pr-branch-name
        run: |
          branchName=$(gh pr view ${{ github.event.issue.number }} --json "headRefName" --jq ".headRefName" --repo ${{ github.repository }})
          echo "branchName=$branchName" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  changes:
    needs: [ get-pr-branch-name ]
    outputs:
      paths: ${{ steps.changed-dirs.outputs.all_modified_files }}
    permissions:
      contents: read
      pull-requests: read  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-pr-branch-name.outputs.branchName }}
      - id: changed-dirs
        uses: tj-actions/changed-files@v46
        with:
          dir_names: true
          matrix: true
          base_sha: main
  check-drift:
    needs: [ changes ]
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.paths && needs.changes.outputs.paths != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        paths: ${{ fromJSON(needs.changes.outputs.paths) }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4

    - name: ls
      run: ls

    - name: check dir
      id: check_dir
      run: |
        if [ -d ${{ matrix.paths }} ]; then
          echo "exist_dir=true" >> $GITHUB_OUTPUT
        else
          echo "exist_dir=false" >> $GITHUB_OUTPUT
        fi

    - name: check drift
      if: steps.check_dir.outputs.exist_dir == 'true'
      working-directory: ${{ matrix.paths }}
      run: |
        if [ "hoge" = ${{ matrix.paths }} ]; then
          exit 1
        else
          exit 0
        fi
  
  comment:
    needs: [ check-drift ]
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.check-drift.result, 'failure') }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write    
    steps:
    - uses: actions/checkout@v4

    - name: Create comment file
      run: |
        cat  << EOF > comment.md
        ## Merge Failed
        The merge failed. Please check the logs for more information.
        ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        EOF

    - name: Create PR comment
      run: |
        gh pr comment ${{ github.event.issue.number }} --body-file comment.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge:
    needs: [ check-drift ]
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.check-drift.result, 'failure') }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write    
    steps:
    - name: merge
      run: |
        gh pr merge --merge --delete-branch ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # merge:
  #   needs: [ check-drift ]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: write
  #     pull-requests: write    
  #   steps:
  #   - uses: actions/checkout@v4
  #   - run: |
  #       git branch -a
  #   - name: merge
  #     run: |
  #       gh api \
  #         --method PUT \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         /repos/ureuzy/test/pulls/${{ github.event.issue.number }}/merge \
  #          -f "commit_message=Merged by command"
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}           
    
  